<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>exemple</groupId>
		<artifactId>exemple-service</artifactId>
		<version>3.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>exemple-service-api-launcher</artifactId>
	<packaging>war</packaging>

	<properties>

		<application.contextpath>ExempleService</application.contextpath>
		<application.host>http://localhost</application.host>

		<!-- SONAR -->
		<sonar.coverage.jacoco.xmlReportPaths>${sonar.coverage.report.path}</sonar.coverage.jacoco.xmlReportPaths>

	</properties>

	<dependencyManagement>

		<dependencies>

			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat</artifactId>
				<version>${tomcat.version}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>7.6.0</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>7.6.0</version>
			</dependency>

			<dependency>
				<groupId>io.cucumber</groupId>
				<artifactId>cucumber-junit-platform-engine</artifactId>
				<version>7.6.0</version>
				<scope>test</scope>
			</dependency>

			<!-- JUNIT PLATEFORM -->

			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-suite-api</artifactId>
				<version>1.8.2</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-suite-engine</artifactId>
				<version>1.8.2</version>
				<scope>test</scope>
			</dependency>

			<!-- BCRYPT -->
			<!-- https://www.mindrot.org/projects/jBCrypt/ -->

			<dependency>
				<groupId>org.mindrot</groupId>
				<artifactId>jbcrypt</artifactId>
				<version>0.4</version>
			</dependency>

			<!-- JSOUP -->
			<!-- https://jsoup.org/ -->

			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>1.15.3</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>

		<!-- API -->

		<dependency>
			<groupId>exemple</groupId>
			<artifactId>exemple-service-api</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- JSOUP -->

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- BCRYPT -->

		<dependency>
			<groupId>org.mindrot</groupId>
			<artifactId>jbcrypt</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- TEST -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- REST ASSURED -->

		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- CUCUMBER -->

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JUNIT PLATEFORM -->

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources/contexts/test_company</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

		<pluginManagement>

			<plugins>

				<!-- DOCKER -->
				<!-- http://dmp.fabric8.io/ -->
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.40.2</version>
				</plugin>

				<!-- TEST INTEGRATION -->
				<!-- http://maven.apache.org/surefire/maven-failsafe-plugin/ -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

		</plugins>

	</build>

	<profiles>

		<profile>
			<id>service</id>

			<build>
				<plugins>

					<!-- HELPER -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>process-resources</phase>
								<configuration>
									<portNames>
										<portName>application.port</portName>
										<portName>cassandra.port</portName>
										<portName>zookeeper.port</portName>
										<portName>kafka.port</portName>
										<portName>hazelcast.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- JACOCO -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>com/exemple/service/api/launcher/account/**</exclude>
								<exclude>com/exemple/service/api/launcher/actuate/**</exclude>
								<exclude>com/exemple/service/api/launcher/core/**</exclude>
								<exclude>com/exemple/service/api/launcher/login/**</exclude>
								<exclude>com/exemple/service/api/launcher/stock/**</exclude>
								<exclude>com/exemple/service/api/launcher/subscription/**</exclude>
								<exclude>com/exemple/service/api/launcher/swagger/**</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>report-integration</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- DOCKER -->
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build_exemple_service</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<images>
										<image>
											<name>exemple-service</name>
											<build>
												<dockerFile>${basedir}/../Dockerfile</dockerFile>
												<args>
													<VERSION_TOMCAT>${tomcat.version}-jdk17</VERSION_TOMCAT>
												</args>
											</build>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_cassandra</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>cassandra:${cassandra-version}</name>
											<alias>cassandra</alias>
											<run>
												<ports>
													<port>${cassandra.port}:9042</port>
												</ports>
												<wait>
													<log>(?s)Startup complete</log>
													<time>60000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_zookeeper</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>zookeeper:3.8.0</name>
											<alias>zookeeper</alias>
											<run>
												<ports>
													<port>${zookeeper.port}:2181</port>
												</ports>
												<wait>
													<time>5000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_kafka</id>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>bitnami/kafka:3.2.0</name>
											<alias>kafka</alias>
											<run>
												<ports>
													<port>9092:9092</port>
													<port>${kafka.port}:9093</port>
												</ports>
												<env>
													<ALLOW_PLAINTEXT_LISTENER>yes</ALLOW_PLAINTEXT_LISTENER>
													<KAFKA_CFG_ZOOKEEPER_CONNECT>172.17.0.1:${zookeeper.port}</KAFKA_CFG_ZOOKEEPER_CONNECT>
													<KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT</KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP>
													<KAFKA_CFG_LISTENERS>CLIENT://:9092,EXTERNAL://:9093</KAFKA_CFG_LISTENERS>
													<KAFKA_CFG_ADVERTISED_LISTENERS>CLIENT://localhost:9092,EXTERNAL://172.17.0.1:${kafka.port}</KAFKA_CFG_ADVERTISED_LISTENERS>
													<KAFKA_CFG_INTER_BROKER_LISTENER_NAME>CLIENT</KAFKA_CFG_INTER_BROKER_LISTENER_NAME>
												</env>
												<wait>
													<time>10000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>start_exemple_service</id>
								<goals>
									<goal>start</goal>
									<goal>copy</goal>
								</goals>
								<configuration>
									<images>
										<image>
											<name>exemple-service</name>
											<alias>exemple-service</alias>
											<run>
												<ports>
													<port>${application.port}:8080</port>
													<port>${hazelcast.port}:5701</port>
												</ports>
												<env>
													<CATALINA_OPTS>-Dlogging.config=file:/usr/local/tomcat/etc/logback.xml</CATALINA_OPTS>
													<spring.profiles.active>noSecurity</spring.profiles.active>
												</env>
												<volumes>
													<bind>
														<volume>${project.build.testOutputDirectory}/conf:/usr/local/tomcat/etc</volume>
													</bind>
												</volumes>
												<wait>
													<http>
														<url>http://localhost:${application.port}/ExempleService/actuator/health</url>
														<method>GET</method>
														<status>200</status>
													</http>
													<time>60000</time>
												</wait>
												<log>
													<date>default</date>
												</log>
											</run>
											<copy>
												<entries>
													<entry>
														<containerPath>/usr/local/tomcat/logs/archive</containerPath>
														<hostDirectory>${project.build.directory}/.logs</hostDirectory>
													</entry>
												</entries>
											</copy>
										</image>
									</images>
								</configuration>
							</execution>
							<execution>
								<id>stop_all</id>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>it</id>

			<build>

				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<application.host>${application.host}</application.host>
								<application.port>${application.port}</application.port>
								<application.contextpath>${application.contextpath}</application.contextpath>
							</systemPropertyVariables>
							<argLine>${jacoco.it.agent.argLine}</argLine>
						</configuration>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

</project>