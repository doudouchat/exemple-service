version: "3.5"
services:
  service:
    container_name: exemple-service
    image: exemple-service
    networks:
    - test
    - authorization
    - service
    environment:
    - "CATALINA_OPTS=-Dlogging.config=file:/usr/local/tomcat/etc/logback.groovy -Dhazelcast.client.config=/usr/local/tomcat/etc/hazelcast.yaml"
    - "JAVA_OPTS=-Xms256m -Xmx512m -XX:MetaspaceSize=128m"
    ports:
    - 8080:8080
    - 5705:5705
    volumes:
    - ./docker/api:/usr/local/tomcat/etc
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "accept:application/json", "http://localhost:8080/ExempleService/actuator/health"]
      interval: 30s
      start_period: 30s
  kafka:
    container_name: exemple-service-kafka
    image: wurstmeister/kafka:2.12-2.1.0
    networks:
    - service
    ports:
    - 10025:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:10024
      KAFKA_ADVERTISED_PORT: 9092
networks:
  test:
    external:
      name: exemple-test
  authorization:
    external:
      name: exemple-authorization
  service:
    driver: bridge
    name: exemple-service